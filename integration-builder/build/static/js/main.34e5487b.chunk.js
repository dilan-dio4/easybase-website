(this["webpackJsonpintegration-builder"]=this["webpackJsonpintegration-builder"]||[]).push([[0],{162:function(e,t,n){e.exports=n(260)},167:function(e,t,n){},168:function(e,t,n){},256:function(e,t,n){},258:function(e,t,n){},259:function(e,t,n){},260:function(e,t,n){"use strict";n.r(t);var a=n(0),s=n.n(a),o=n(12),r=n.n(o),c=(n(167),n(168),n(147)),l=n(307),i=n(308),u=n(41),p=n(14),d=n(25),m=n(51),y=n(310),g=n(305),b=n(261),h=n(4),f=n(309),v=n(306),E=n(311),j=n(304),S=n(52),O=n.n(S),w=n(302),_=n(104),N=(n(105),n(295),n(134)),R=n.n(N),T=(n(30),n(7)),C=n(72),B=n.n(C),q=n(97),k=n.n(q);n(136),n(137),n(300),n(312);try{B.a.utc().isUTC()}catch(ue){B.a.extend(k.a)}var x=function(e){var t=e.to,n=e.style,a=Object(m.a)(e,["to","style"]);return s.a.createElement(R.a,Object.assign({color:"disabled",style:Object(p.a)(Object(p.a)({cursor:"pointer"},n),{},{fontSize:20}),onClick:function(){return window.open(t,"_blank")}},a))},I=function(e){var t=e.title,n=e.to,a=(e.style,e.className),o=Object(m.a)(e,["title","to","style","className"]);return s.a.createElement("a",Object.assign({className:"".concat(a," d-flex align-items-center"),href:n,target:"_blank",rel:"noopener noreferrer"},o),s.a.createElement(x,{to:n,className:"mr-2"}),t)},A=function(){return B.a.utc()},V=n(303),L=n(99),P=n(94),M=n.n(P),U=n(138),D=n.n(U),H=n(301),z=n(139),Q=n.n(z),$=Object(T.a)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}},{name:"PrivateThreeSwitchBase"})(a.forwardRef((function(e,t){var n,s=e.autoFocus,o=(e.checkedIcon,e.classes),r=e.className,c=e.disabled,l=e.Icon,i=e.NullIcon,p=e.id,d=e.inputProps,y=e.inputRef,g=e.name,b=e.onBlur,f=e.onChange,v=e.onFocus,E=e.readOnly,j=e.required,S=e.tabIndex,O=e.type,w=e.value,_=Object(m.a)(e,["autoFocus","checkedIcon","classes","className","disabled","Icon","NullIcon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),N=D()(),R=c;N&&"undefined"===typeof R&&(R=N.disabled);var T="checkbox"===O||"radio"===O;return a.createElement(H.a,Object.assign({component:"span",className:Object(h.a)(o.root,(n={},Object(u.a)(n,o.checked,!0===w),Object(u.a)(n,o.nulled,null===w),Object(u.a)(n,o.disabled,R),n),r),disabled:R,tabIndex:null,role:void 0,onFocus:function(e){v&&v(e),N&&N.onFocus&&N.onFocus(e)},onBlur:function(e){b&&b(e),N&&N.onBlur&&N.onBlur(e)},ref:t},_),a.createElement("input",Object.assign({autoFocus:s,checked:w,className:o.input,disabled:R,id:T&&p,name:g,onChange:function(e){var t=null;!1===w?t=null:null===w?t=!0:!0===w&&(t=!1),f&&f(e,t)},readOnly:E,ref:y,required:j,tabIndex:S,type:O,value:w},d)),null===w?i:l)}))),F=a.forwardRef((function(e,t){var n=e.classes,s=e.className,o=e.color,r=void 0===o?"secondary":o,c=e.size,l=void 0===c?"medium":c,i=Object(m.a)(e,["classes","className","color","size"]),p=a.createElement("span",{className:n.thumb}),d=a.createElement("span",{className:n.thumb},a.createElement(Q.a,{className:"Small"===M()(l)?n.slashIconSmall:n.slashIcon}));return a.createElement("span",{className:Object(h.a)(n.root,Object(u.a)({},n["size".concat(M()(l))],"medium"!==l),s)},a.createElement($,Object.assign({type:"checkbox",Icon:p,NullIcon:d,classes:{root:Object(h.a)(n.switchBase,n["color".concat(M()(r))]),input:n.input,checked:n.checked,disabled:n.disabled,nulled:n.nulled},ref:t},i)),a.createElement("span",{className:n.track}))})),G=Object(T.a)((function(e){return{root:{display:"inline-flex",width:70,height:38,overflow:"hidden",padding:12,boxSizing:"border-box",position:"relative",flexShrink:0,zIndex:0,verticalAlign:"middle","@media print":{colorAdjust:"exact"}},switchBase:{position:"absolute",top:0,left:0,zIndex:1,color:"light"===e.palette.type?e.palette.grey[50]:e.palette.grey[400],transition:e.transitions.create(["left","transform"],{duration:e.transitions.duration.shortest}),"&$checked":{transform:"translateX(32px)"},"&$nulled":{transform:"translateX(16px)"},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$checked + $track":{opacity:.5},"&$disabled + $track":{opacity:"light"===e.palette.type?.12:.1}},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:Object(L.fade)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$nulled":{color:"light"===e.palette.type?e.palette.grey[300]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.primary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white},"&$nulled + $track":{backgroundColor:e.palette.common.white}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:Object(L.fade)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[800]},"&$nulled":{color:"light"===e.palette.type?e.palette.grey[300]:e.palette.grey[800]},"&$checked + $track":{backgroundColor:e.palette.secondary.main},"&$disabled + $track":{backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white},"&$nulled + $track":{backgroundColor:"#777"}},sizeSmall:{width:50,height:24,padding:7,"& $thumb":{width:16,height:16},"& $switchBase":{padding:4,"&$checked":{transform:"translateX(26px)"},"&$nulled":{transform:"translateX(13px)"}}},checked:{},disabled:{},nulled:{},input:{left:"-100%",width:"300%"},thumb:{boxShadow:e.shadows[1],backgroundColor:"currentColor",width:20,height:20,borderRadius:"50%",display:"flex",alignItems:"center",justifyContent:"center"},track:{height:"100%",width:"100%",borderRadius:7,zIndex:-1,transition:e.transitions.create(["opacity","background-color"],{duration:e.transitions.duration.shortest}),backgroundColor:"light"===e.palette.type?e.palette.common.black:e.palette.common.white,opacity:"light"===e.palette.type?.44:.36},slashIcon:{color:"light"===e.palette.type?"#757575e8":e.palette.common.white,fontSize:20},slashIconSmall:{color:"light"===e.palette.type?"#757575e8":e.palette.common.white,fontSize:14}}}),{name:"ThreeSwitch"})(F),Y=n(140),W=Object(w.a)((function(e){return{singleComponent:{padding:e.spacing(1,0),flexGrow:1,display:"flex",justifyContent:"flex-end"},columnHeaderTypography:{wordBreak:"break-all",fontWeight:500,fontSize:17,overflow:"hidden",whiteSpace:"nowrap",textOverflow:"ellipsis"}}})),J=function(e){var t=e.accessorToColumnTypeMap,n=e.typeToValueMap,a=e.queryValueChangeCallback,o=e.largeText,r=void 0!==o&&o,c=e.formatAccessorNames,l=void 0!==c&&c,i=W();return s.a.createElement(s.a.Fragment,null,Object.entries(t).map((function(e){var t=Object(d.a)(e,2),o=t[0],c=t[1];return s.a.createElement("div",{className:"my-1 d-flex align-items-center w-100",key:"".concat(o)},s.a.createElement(b.a,{className:r&&i.columnHeaderTypography,variant:r?"inherit":"body1"},l?Object(Y.accessorNameToColumnName)(o):o),s.a.createElement("span",{className:i.singleComponent},function(){switch(c){case"time":return s.a.createElement(V.a,{value:null==n[o]?null:A().startOf("day").minute(n[o]),onChange:function(e){return a(null===e?null:60*e.hour()+e.minute(),o)},format:"h:mm a",getPopupContainer:function(e){return e.parentNode},allowClear:!0,className:"antd-integrator-popup"});case"text":case"richtext":case"file":case"image":case"video":return s.a.createElement(f.a,{variant:"outlined",size:"small",style:{width:125},value:null===n[o]?"":n[o],onChange:function(e){return""!==e.target.value?a(e.target.value,o):a(null,o)}});case"date":return s.a.createElement(_.a,{value:null==n[o]?null:A(n[o]),onChange:function(e){return a(null===e?null:A().startOf("day").format("MM-DD-YYYY"),o)},allowClear:!0,className:"antd-integrator-popup"});case"location":return s.a.createElement("div",{className:"d-flex align-items-center justify-content-between pt-1 flex-row",style:{width:200}},s.a.createElement(f.a,{type:"number",inputProps:{style:{fontSize:14}},size:"small",value:null==n[o]?"":n[o].split(",")[0],onChange:function(e){return null==n[o]?a("0,0",o):a(""===e.target.value?null:"".concat(e.target.value,",").concat(n[o].split(",")[1]),o)}}),s.a.createElement(f.a,{type:"number",inputProps:{style:{fontSize:14}},size:"small",value:null==n[o]?"":n[o].split(",")[1],onChange:function(e){return null==n[o]?a("0,0",o):a(""===e.target.value?null:"".concat(n[o].split(",")[0],",").concat(e.target.value),o)}}));case"number":return s.a.createElement(f.a,{variant:"outlined",type:"number",size:"small",style:{width:125},value:n[o],onChange:function(e){return""!==e.target.value?a(Number(e.target.value),o):a(null,o)}});case"boolean":return s.a.createElement(G,{value:n[o],onChange:function(e,t){return a(t,o)}})}}()))})))},K=n(103),X=n.n(K),Z=n(98),ee=n.n(Z),te=n(26),ne=Object(w.a)((function(e){return{tabsBorder:{borderBottom:"1px solid #e8e8e8"},refractorRoot:{padding:"5px 15px"},codeRoot:{backgroundColor:"#272822",padding:15,width:"100%",borderRadius:"0.3em"},clearButtonRoot:{color:Object(te.d)("#757575",.55),borderRadius:4,display:"flex",cursor:"pointer",marginRight:8,"&:hover":{backgroundColor:e.palette.error.main,color:"#ffffff"}},singleComponent:{padding:e.spacing(1,0),flexGrow:1,display:"flex",justifyContent:"flex-end"},columnHeaderTypography:{wordBreak:"break-all",fontWeight:500,fontSize:18},optionsPaper:{borderRadius:6,position:"relative",width:375},helpIcon:{position:"absolute",top:12,right:12}}})),ae=function(e,t){return"https://api.easybase.io/".concat(t,"/").concat(e)},se=function(e){return Object.values(e).some((function(e){return null!==e}))},oe=function(e,t){if(e in t){var n=t[e];return"boolean"===typeof n&&(n=n?"True":"False"),", ".concat(e,"=").concat("authentication"===e?'"'.concat(n,'"'):n)}return""},re=function e(t,n,a){var s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=function(t){switch(typeof t){case"string":return'"'.concat(t,'"');case"boolean":return o?ee()(""+t):""+t;case"object":return se(t)?e(t,n,', "',s,o):"{}";default:return t}};if(O()(t))return"";var c=[];return Object.entries(t).forEach((function(e){var t=Object(d.a)(e,2),a=t[0],s=t[1];null!==s&&c.push('"'.concat(a,'"').concat(n).concat(r(s)))})),s?c.map((function(e){return e.replace(/"/g,'\\"').replace(/'/g,"\\'")})).join(a):c.join(a)};n(246),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(254),n(255),n(256),n(257);function ce(e){var t=e.children,n=e.value,a=e.index,o=Object(m.a)(e,["children","value","index"]);return s.a.createElement("div",Object.assign({role:"tabpanel",hidden:n!==a,id:"simple-tabpanel-".concat(a),"aria-labelledby":"simple-tab-".concat(a)},o),n===a&&s.a.createElement(s.a.Fragment,null,t))}var le=function(e){var t=e.options,n=(e.onClose,t.redisID),o=t.type,r=t.typeFormats,c=t.queryObject,l=t.accessorToColumnTypeMap,i=(t.defaultValues,t.authentication),m=Object(a.useState)(0),S=Object(d.a)(m,2),w=S[0],_=S[1],N=Object(a.useState)(Object.keys(l).reduce((function(e,t){return Object(p.a)(Object(p.a)({},e),{},Object(u.a)({},t,null))}),{})),R=Object(d.a)(N,2),T=R[0],C=R[1],B=Object(a.useState)(10),q=Object(d.a)(B,2),k=q[0],A=q[1],V=Object(a.useState)(0),L=Object(d.a)(V,2),P=L[0],M=L[1],U=Object(a.useState)(!1),D=Object(d.a)(U,2),H=D[0],z=D[1],Q=Object(a.useState)(!1),$=Object(d.a)(Q,2),F=$[0],G=$[1],Y=Object(a.useState)(Object.keys(l).reduce((function(e,t){return Object(p.a)(Object(p.a)({},e),{},Object(u.a)({},t,null))}),{})),W=Object(d.a)(Y,2),K=W[0],Z=W[1],ee=ne(),te=Object(a.useMemo)((function(){var e={};switch(o){case"GET":return e=Object(p.a)({limit:k,offset:P},T),H&&delete e.limit,0===P&&delete e.offset,!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t,n){var a=function(e,t,n){switch(e){case"HH:MM 12h":case"HH:MM 24h":case"String":case"RTE":case"HTML":switch(n){case"swift":return"var ".concat(t,": String?");case"java":return"String ".concat(t,";")}case"URL":switch(n){case"swift":return"var ".concat(t,": String?");case"java":return"String ".concat(t,";")}case"MM/DD/YYYY":case"YYYY/MM/DD":case"dd-mmm-yyyy":case"dd.mm.yyyy":switch(n){case"swift":return"var ".concat(t,": String?");case"java":return"String ".concat(t,";")}case"Coordinates":case"ISO String":case"Object":switch(n){case"swift":return"var ".concat(t,": String?");case"java":return"String ".concat(t,";")}case"Number":switch(n){case"swift":return"var ".concat(t,": Float?");case"java":return"float ".concat(t,";")}case"1/0":case"Total Minutes":switch(n){case"swift":return"var ".concat(t,": Int?");case"java":return"int ".concat(t,";")}case"T/F":switch(n){case"swift":return"var ".concat(t,": Bool?");case"java":return"boolean ".concat(t,";")}case"UNIX Stamp":switch(n){case"swift":return"var ".concat(t,": Int?");case"java":return"int ".concat(t,";")}}},o="{ "+Object.keys(t).join(", ")+" }";return[{language_name:"HTML/JS",code_string:function(){var t=Object(p.a)({},n),a=n.offset?n.offset:"null",r=n.limit?n.limit:"null";return delete t.limit,delete t.offset,delete t.authentication,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/npm/easybasejs/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},"\n                    ".concat(se(t)?"\n                    const customQuery = {\n                        ".concat(re(t," : ",",\n                        "),"\n                    }\n                    "):"","\n                    const offset = ").concat(a,";\n                    const limit = ").concat(r,';\n\n                    EasyBase.get("').concat(e,'", offset, limit').concat(n.authentication?", ".concat(n.authentication):"").concat(se(t)?n.authentication?", customQuery":", null, customQuery":"",")\n                        .then(data => {\n                            console.log(data); // [ ").concat(o,", ... ]\n                        });\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Node.js",code_string:function(){var a="{ "+Object.keys(t).join(", ")+" }",s=Object(p.a)({},n),o=n.offset?n.offset:"null",r=n.limit?n.limit:"null";return delete s.limit,delete s.offset,delete s.authentication,"\n        // npm install --save easybasejs\n\n        var EasyBase = require('easybasejs');\n        ".concat(se(s)?"\n        const customQuery = {\n            ".concat(re(s," : ",",\n            "),"\n        }\n        "):"","\n        const offset = ").concat(o,";\n        const limit = ").concat(r,';\n        \n        EasyBase.get("').concat(e,'", offset, limit').concat(n.authentication?", ".concat(n.authentication):"").concat(se(s)?n.authentication?", customQuery":", null, customQuery":"",")\n            .then(data => {\n                console.log(data); // [ ").concat(a,", ... ]\n            });\n        ")}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Python",code_string:function(){var t=Object(p.a)({},n),a=n.offset?n.offset:"None",s=n.limit?n.limit:"None";return delete t.limit,delete t.offset,delete t.authentication,"\n        # pip install easybase-python\n        \n        from easybase import get, post, update, delete\n        ".concat(se(t)?"\n        customQuery = {\n            ".concat(re(t," : ",",\n            ",!1,!0),"\n        }\n        "):"","\n        offset = ").concat(a,"\n        limit = ").concat(s,'\n\n        easybase_response = get("').concat(e,'", offset, limit').concat(oe("authentication",n)).concat(se(t)?"".concat("authentication"in n?", customQuery=customQuery":", None, customQuery=customQuery"):"","))\n        print(easybase_response) # [ ").concat(o,", ... ]\n\n        ")}(),prism_code:"python",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybase-python",title:"Read the Documentation"})},{language_name:"Java",code_string:"\n        import java.net.*;\n        import java.io.*;\n\n        // https://github.com/google/gson\n        import com.google.gson.Gson; \n        import com.google.gson.GsonBuilder;  \n\n        class EasybaseObj {\n            ".concat(Object.entries(t).map((function(e){var t=Object(d.a)(e,2),n=t[0],s=t[1];return a(s,n,"java")})).join("\n            "),'\n        }\n\n        public class HelloWorld{\n\n            public static EasybaseObj[] easybase(String easybase_url, String postBody) throws Exception {\n                Gson gson = new Gson();\n                URL url = new URL(easybase_url);\n                HttpURLConnection con = (HttpURLConnection) url.openConnection();\n                con.setRequestMethod("POST");\n                con.setRequestProperty("Content-Type", "application/json");\n                con.setRequestProperty("Accept", "application/json");\n                con.setDoOutput(true);\n                con.setDoInput(true);\n\n                OutputStream os = con.getOutputStream();\n                byte[] input = postBody.getBytes("utf-8");\n                os.write(input, 0, input.length);           \n\n                BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                    response.append(responseLine.trim());\n                }\n\n                return gson.fromJson(response.toString(), EasybaseObj[].class);\n            }\n\n            public static void main(String[] args) {\n                String easybase_url = "').concat(ae(e,"get"),'";\n                ').concat(se(n)?'\n                String postBody = "{"\n                    + "'.concat(re(n," : ",',"\n                    + "',!0),'"\n                + "}";\n                '):"","      \n                try {\n                    EasybaseObj[] easybase_data = easybase(easybase_url, ").concat(se(n)?"postBody":'""',");\n                    System.out.println(easybase_data);\n                    // [ ").concat(o,", ... ]\n                } catch (Exception e) {\n                    System.out.println(e);\n                    \n                }\n            }\n        }"),prism_code:"java"},{language_name:"C#",code_string:'\n            using System;\n            using Newtonsoft.Json.Linq; // NuGet Newtonsoft.Json - https://www.newtonsoft.com/json\n            using System.Net;\n            using System.Text;\n            using System.IO;\n\n            public class Program\n            {\t\n                static JArray easybase(string easybase_url, string postBody)\n                {\n                    var request = (HttpWebRequest) WebRequest.Create(easybase_url);\n                    request.Method = "POST";\n                    request.ContentType = "application/json";\n\n                    using (var stream = request.GetRequestStream())\n                    {\n                        stream.Write(Encoding.ASCII.GetBytes(postBody));\n                    }\n\n                    var response = (HttpWebResponse) request.GetResponse();\n                    var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();\n                    return JArray.Parse(responseString);\n                }\n                \n                public static void Main()\n                {\n                    '.concat(se(n)?'string postBody = "{"\n                        + "'.concat(re(n," : ",',"\n                        + "',!0),'"\n                    + "}";\n                    '):"",'\n                    string url = "').concat(ae(e,"get"),'";\n                    JArray x = easybase(url, ').concat(se(n)?"postBody":'""',");\n                    Console.WriteLine(x);\n                    // [ ").concat(o,", ... ]\n                }\n\n            }\n        "),prism_code:"csharp"},{language_name:"Swift",code_string:"\n        import UIKit\n\n        struct EasyBaseEntry: Codable {\n            ".concat(Object.entries(t).map((function(e){var t=Object(d.a)(e,2),n=t[0],s=t[1];return a(s,n,"swift")})).join("\n            "),'\n        }\n\n        func easybase(easybase_url: String, postBody: [String: Any] = [:], completion: @escaping ([EasyBaseEntry])->())\n        {\n            let url = URL(string: easybase_url)!\n            var request = URLRequest(url: url)\n            request.setValue("application/json", forHTTPHeaderField: "Content-Type")\n            request.httpMethod = "POST"\n\n            let jsonData = try? JSONSerialization.data(withJSONObject: postBody)\n            request.httpBody = jsonData\n            \n            let task = URLSession.shared.dataTask(with: request) { data, response, error in\n                guard let data = data, error == nil else {\n                    print(error?.localizedDescription ?? "No data")\n                    completion([])\n                    return\n                }\n\n                do {\n                    let res = try JSONDecoder().decode([EasyBaseEntry].self, from: data)\n                    completion(res)\n                } catch let error {\n                    completion([])\n                    print(error)\n                }\n            }\n\n            task.resume()\n        }\n\n        let url = "').concat(ae(e,"get"),'"\n        ').concat(se(n)?"\n        let postBody: [String: Any] = [\n            ".concat(re(n," : ",",\n            "),"\n        ]\n        "):"","\n        easybase(easybase_url: url").concat(se(n)?", postBody: postBody":"",") { (easybase_data) -> () in\n            print(easybase_data)\n            // [ ").concat(o,", ... ]\n        }\n        "),prism_code:"swift"}]}(n,r,e);case"UPDATE":return e=Object(p.a)({updateValues:K},T),!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t){return[{language_name:"HTML/JS",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.updateValues,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/npm/easybasejs/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},"\n                    ".concat(se(n)?"\n                    const customQuery = {\n                        ".concat(re(n," : ",",\n                        "),"\n                    };\n                    "):"","\n                    const updateValues = {\n                        ").concat("updateValues"in t?re(t.updateValues," : ",",\n                        "):"",'\n                    };\n\n                    EasyBase.update("').concat(e,'", updateValues').concat(t.authentication?", ".concat(t.authentication):"").concat(se(n)?t.authentication?", customQuery":", null, customQuery":"",")\n                        .then(data => {\n                            console.log(data);\n                        });\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Node.js",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.updateValues,"\n        // npm install --save easybasejs\n\n        var EasyBase = require('easybasejs');\n        ".concat(se(n)?"\n        const customQuery = {\n            ".concat(re(n," : ",",\n            "),"\n        };\n        "):"","\n        const updateValues = {\n            ").concat("updateValues"in t?re(t.updateValues," : ",",\n            "):"",'\n        };\n\n        EasyBase.update("').concat(e,'", updateValues').concat(t.authentication?", ".concat(t.authentication):"").concat(se(n)?t.authentication?", customQuery":", null, customQuery":"",")\n            .then(data => {\n                console.log(data);\n            });\n        ")}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Python",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.updateValues,"\n        # pip install easybase-python\n        \n        from easybase import get, post, update, delete\n        ".concat(se(n)?"\n        query = {\n            ".concat(re(n," : ",",\n            ",!1,!0),"\n        }\n        "):"","\n        updateValues = {\n            ").concat("updateValues"in t?re(t.updateValues," : ",",\n            ",!1,!0):"",'\n        };\n\n        res = update("').concat(e,'", updateValues').concat(oe("authentication",t)).concat(se(n)?", customQuery=query":"",")})\n        # Successfully deleted records\n        ")}(),prism_code:"python",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybase-python",title:"Read the Documentation"})},{language_name:"Java",code_string:function(){var n="updateValues"in t?t.updateValues:{},a=Object(p.a)({},t);return delete a.updateValues,'\n        import java.net.*;\n        import java.io.*;\n\n        public class HelloWorld{\n\n            public static String easybase(String easybase_url, String postBody) throws Exception {\n                URL url = new URL(easybase_url);\n                HttpURLConnection con = (HttpURLConnection) url.openConnection();\n                con.setRequestMethod("POST");\n                con.setRequestProperty("Content-Type", "application/json");\n                con.setRequestProperty("Accept", "application/json");\n                con.setDoOutput(true);\n                con.setDoInput(true);\n\n                OutputStream os = con.getOutputStream();\n                byte[] input = postBody.getBytes("utf-8");\n                os.write(input, 0, input.length);           \n\n                BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                    response.append(responseLine.trim());\n                }\n                return response.toString();\n            }\n\n            public static void main(String[] args) {\n                String easybase_url = "'.concat(ae(e,"update"),'";\n\n                String updateValues = "{"\n                    + "').concat(re(n," : ",',"\n                    + "',!0),'"\n                + "}";\n                ').concat(se(t)?'\n                String postBody = "{"\n                    + "'.concat(re(a," : ",',"\n                    + "',!0),',"\n                    + "\\"updateValues\\" : " + updateValues\n                + "}";\n                '):"","      \n                try {\n                    easybase(easybase_url, ").concat(se(t)?"postBody":'""',");\n                } catch (Exception e) {\n                    System.out.println(e);                    \n                }\n            }\n        }")}(),prism_code:"java"},{language_name:"C#",code_string:function(){var n="updateValues"in t?t.updateValues:{},a=Object(p.a)({},t);return delete a.updateValues,'\n            using System;\n            using System.Net;\n            using System.Text;\n            using System.IO;\n\n            public class Program\n            {\t\n                static void easybase(string easybase_url, string postBody)\n                {\n                    var request = (HttpWebRequest) WebRequest.Create(easybase_url);\n                    request.Method = "POST";\n                    request.ContentType = "application/json";\n\n                    using (var stream = request.GetRequestStream())\n                    {\n                        stream.Write(Encoding.ASCII.GetBytes(postBody));\n                    }\n\n                    var response = (HttpWebResponse) request.GetResponse();\n                    var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();\n                }\n                \n                public static void Main()\n                {\n                    string updateValues = "{"\n                        +"'.concat(re(n," : ",',"\n                        + "',!0),'"\n                    + "}";\n\n                    ').concat(se(t)?'string postBody = "{"\n                        + "'.concat(re(a," : ",',"\n                        + "',!0),',"\n                        + "\\"updateValues\\" : " + updateValues\n                    + "}";\n                    '):"",'\n                    string url = "').concat(ae(e,"update"),'";\n                    easybase(url, postBody);\n                }\n\n            }\n        ')}(),prism_code:"csharp"},{language_name:"Swift",code_string:function(){var n="updateValues"in t?t.updateValues:{},a=Object(p.a)({},t);return delete a.updateValues,'\n        import UIKit\n\n        func easybase(easybase_url: String, postBody: [String: Any] = [:], completion: @escaping ([EasyBaseEntry])->())\n        {\n            let url = URL(string: easybase_url)!\n            var request = URLRequest(url: url)\n            request.setValue("application/json", forHTTPHeaderField: "Content-Type")\n            request.httpMethod = "POST"\n\n            let jsonData = try? JSONSerialization.data(withJSONObject: postBody)\n            request.httpBody = jsonData\n            \n            let task = URLSession.shared.dataTask(with: request) { data, response, error in\n                guard let data = data, error == nil else {\n                    print(error?.localizedDescription ?? "No data")\n                    completion([])\n                    return\n                }\n                completion(data)\n                }\n            }\n\n            task.resume()\n        }\n\n        let url = "'.concat(ae(e,"update"),'"\n\n        let updateValues: [String: Any] = [\n            ').concat(re(n," : ",",\n            "),"\n        ]\n        ").concat(se(t)?"\n        let postBody: [String: Any] = [\n            ".concat(re(a," : ",",\n            "),',\n            "updateValues": updateValues\n        ]\n        '):"","\n        easybase(easybase_url: url, postBody: postBody) { (easybase_data) -> () in\n            print(easybase_data)\n        }\n        ")}(),prism_code:"swift"}]}(n,e);case"DELETE":return e=Object(p.a)({},T),!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t){return[{language_name:"HTML/JS",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/npm/easybasejs/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},"\n                    ".concat(se(n)?"\n                    const customQuery = {\n                        ".concat(re(n," : ",",\n                        "),"\n                    }\n                    "):"",'\n                    EasyBase.Delete("').concat(e,'"').concat(t.authentication?", ".concat(t.authentication):"").concat(se(n)?t.authentication?", customQuery":", null, customQuery":"",")\n                        .then(data => {\n                            console.log(data);\n                        });\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Node.js",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,"\n        // npm install --save easybasejs\n\n        var EasyBase = require('easybasejs');\n        ".concat(se(n)?"\n        const customQuery = {\n            ".concat(re(n," : ",",\n            "),"\n        }\n        "):"",'\n        EasyBase.Delete("').concat(e,'"').concat(t.authentication?", ".concat(t.authentication):"").concat(se(n)?t.authentication?", customQuery":", null, customQuery":"",")\n            .then(data => {\n                console.log(data);\n            });\n        ")}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Python",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,"\n        # pip install easybase-python\n\n        from easybase import get, post, update, delete\n        ".concat(se(n)?"\n        query = {\n            ".concat(re(n," : ",",\n            ",!1,!0),"\n        }\n        "):"",'\n        res = delete("').concat(e,'"').concat(oe("authentication",t)).concat(se(n)?", customQuery=query":"",")})\n        # Successfully deleted records\n        ")}(),prism_code:"python",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybase-python",title:"Read the Documentation"})},{language_name:"Java",code_string:'\n        import java.net.*;\n        import java.io.*;\n\n        public class HelloWorld{\n\n            public static String easybase(String easybase_url, String postBody) throws Exception {\n                URL url = new URL(easybase_url);\n                HttpURLConnection con = (HttpURLConnection) url.openConnection();\n                con.setRequestMethod("POST");\n                con.setRequestProperty("Content-Type", "application/json");\n                con.setRequestProperty("Accept", "application/json");\n                con.setDoOutput(true);\n                con.setDoInput(true);\n\n                OutputStream os = con.getOutputStream();\n                byte[] input = postBody.getBytes("utf-8");\n                os.write(input, 0, input.length);           \n\n                BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                    response.append(responseLine.trim());\n                }\n                return response.toString();\n            }\n\n            public static void main(String[] args) {\n                String easybase_url = "'.concat(ae(e,"delete"),'";\n                ').concat(se(t)?'\n                String postBody = "{"\n                    + "'.concat(re(t," : ",',"\n                    + "',!0),'"\n                + "}";\n                '):"","      \n                try {\n                    easybase(easybase_url, ").concat(se(t)?"postBody":'""',");\n                } catch (Exception e) {\n                    System.out.println(e);                    \n                }\n            }\n        }"),prism_code:"java"},{language_name:"C#",code_string:'\n            using System;\n            using System.Net;\n            using System.Text;\n            using System.IO;\n\n            public class Program\n            {\t\n                static void easybase(string easybase_url, string postBody)\n                {\n                    var request = (HttpWebRequest) WebRequest.Create(easybase_url);\n                    request.Method = "POST";\n                    request.ContentType = "application/json";\n\n                    using (var stream = request.GetRequestStream())\n                    {\n                        stream.Write(Encoding.ASCII.GetBytes(postBody));\n                    }\n\n                    var response = (HttpWebResponse) request.GetResponse();\n                    var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();\n                }\n                \n                public static void Main()\n                {\n                    '.concat(se(t)?'string postBody = "{"\n                        + "'.concat(re(t," : ",',"\n                        + "',!0),'"\n                    + "}";\n                    '):"",'\n                    string url = "').concat(ae(e,"delete"),'";\n                    easybase(url, ').concat(se(t)?"postBody":'""',");\n                }\n\n            }\n        "),prism_code:"csharp"},{language_name:"Swift",code_string:'\n        import UIKit\n\n        func easybase(easybase_url: String, postBody: [String: Any] = [:], completion: @escaping ([EasyBaseEntry])->())\n        {\n            let url = URL(string: easybase_url)!\n            var request = URLRequest(url: url)\n            request.setValue("application/json", forHTTPHeaderField: "Content-Type")\n            request.httpMethod = "POST"\n\n            let jsonData = try? JSONSerialization.data(withJSONObject: postBody)\n            request.httpBody = jsonData\n            \n            let task = URLSession.shared.dataTask(with: request) { data, response, error in\n                guard let data = data, error == nil else {\n                    print(error?.localizedDescription ?? "No data")\n                    completion([])\n                    return\n                }\n                completion(data)\n                }\n            }\n\n            task.resume()\n        }\n\n        let url = "'.concat(ae(e,"delete"),'"\n        ').concat(se(t)?"\n        let postBody: [String: Any] = [\n            ".concat(re(t," : ",",\n            "),"\n        ]\n        "):"","\n        easybase(easybase_url: url").concat(se(t)?", postBody: postBody":"",") { (easybase_data) -> () in\n            print(easybase_data)\n        }\n        "),prism_code:"swift"}]}(n,e);case"CUSTOM":return e=Object(p.a)({limit:k,offset:P},T),H&&delete e.limit,0===P&&delete e.offset,!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t){return[{language_name:"HTML/JS",code_string:(delete Object(p.a)({},t).authentication,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/gh/easybase/easybasejs-visual@1.0.3/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                        <table id="easybase_table"></table>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},'\n                    // To customize custom components,\n                    // set fourth parameter to object with options from https://glidejs.com/docs/options/. \n                    EasyBase.custom("'.concat(e,'", "easybase_table"').concat(t.authentication?', "'.concat(t.authentication,'", null'):"",", null);\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))),prism_code:"javascript"}]}(n,e);case"POST":return e=Object(p.a)({insertAtEnd:F},T),!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t){return[{language_name:"HTML/JS",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.insertAtEnd,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/npm/easybasejs/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},"\n                    const newRecord = {\n                        ".concat(re(n," : ",",\n                        "),'\n                    };\n\n                    EasyBase.post("').concat(e,'", newRecord').concat(t.authentication?", ".concat(t.authentication,", ").concat(!!t.insertAtEnd):", null, ".concat(!!t.insertAtEnd),")\n                        .then(data => {\n                            console.log(data);\n                        });\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Node.js",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.insertAtEnd,"\n        // npm install --save easybasejs\n\n        var EasyBase = require('easybasejs');\n\n        const newRecord = {\n            ".concat(re(n," : ",",\n            "),'\n        };\n\n        EasyBase.post("').concat(e,'", newRecord').concat(t.authentication?", ".concat(t.authentication,", ").concat(!!t.insertAtEnd):", null, ".concat(!!t.insertAtEnd),")\n            .then(data => {\n                console.log(data);\n            });\n        ")}(),prism_code:"javascript",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})},{language_name:"Python",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,delete n.insertAtEnd,"\n        # pip install easybase-python\n        \n        from easybase import get, post, update, delete\n\n        newRecord = {\n            ".concat(re(n," : ",",\n            ",!1,!0),'\n        };\n\n        res = post("').concat(e,'", newRecord').concat(oe("authentication",t)).concat(oe("insertAtEnd",t),")\n        # Successfully inserted new record\n        ")}(),prism_code:"python",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybase-python",title:"Read the Documentation"})},{language_name:"Java",code_string:'\n        import java.net.*;\n        import java.io.*;\n\n        public class HelloWorld{\n\n            public static String easybase(String easybase_url, String postBody) throws Exception {\n                URL url = new URL(easybase_url);\n                HttpURLConnection con = (HttpURLConnection) url.openConnection();\n                con.setRequestMethod("POST");\n                con.setRequestProperty("Content-Type", "application/json");\n                con.setRequestProperty("Accept", "application/json");\n                con.setDoOutput(true);\n                con.setDoInput(true);\n\n                OutputStream os = con.getOutputStream();\n                byte[] input = postBody.getBytes("utf-8");\n                os.write(input, 0, input.length);           \n\n                BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream(), "utf-8"));\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                    response.append(responseLine.trim());\n                }\n                return response.toString();\n            }\n\n            public static void main(String[] args) {\n                String easybase_url = "'.concat(ae(e,"post"),'";\n\n                String postBody = "{"\n                    + "').concat(re(t," : ",',"\n                    + "',!0),'"\n                + "}";\n\n                try {\n                    easybase(easybase_url, postBody);\n                } catch (Exception e) {\n                    System.out.println(e);                    \n                }\n            }\n        }'),prism_code:"java"},{language_name:"C#",code_string:'\n            using System;\n            using System.Net;\n            using System.Text;\n            using System.IO;\n\n            public class Program\n            {\t\n                static void easybase(string easybase_url, string postBody)\n                {\n                    var request = (HttpWebRequest) WebRequest.Create(easybase_url);\n                    request.Method = "POST";\n                    request.ContentType = "application/json";\n\n                    using (var stream = request.GetRequestStream())\n                    {\n                        stream.Write(Encoding.ASCII.GetBytes(postBody));\n                    }\n\n                    var response = (HttpWebResponse) request.GetResponse();\n                    var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();\n                }\n                \n                public static void Main()\n                {\n\n                    '.concat(se(t)?'string postBody = "{"\n                        + "'.concat(re(t," : ",',"\n                        + "',!0),',"\n                        + "\\"updateValues\\" : " + updateValues\n                    + "}";\n                    '):"",'\n                    string url = "').concat(ae(e,"post"),'";\n                    easybase(url, postBody);\n                }\n\n            }\n        '),prism_code:"csharp"},{language_name:"Swift",code_string:'\n        import UIKit\n\n        func easybase(easybase_url: String, postBody: [String: Any] = [:], completion: @escaping ([EasyBaseEntry])->())\n        {\n            let url = URL(string: easybase_url)!\n            var request = URLRequest(url: url)\n            request.setValue("application/json", forHTTPHeaderField: "Content-Type")\n            request.httpMethod = "POST"\n\n            let jsonData = try? JSONSerialization.data(withJSONObject: postBody)\n            request.httpBody = jsonData\n            \n            let task = URLSession.shared.dataTask(with: request) { data, response, error in\n                guard let data = data, error == nil else {\n                    print(error?.localizedDescription ?? "No data")\n                    completion([])\n                    return\n                }\n                completion(data)\n                }\n            }\n\n            task.resume()\n        }\n\n        let url = "'.concat(ae(e,"post"),'"\n\n        ').concat(se(t)?"\n        let postBody: [String: Any] = [\n            ".concat(re(t," : ",",\n            "),',\n            "updateValues": updateValues\n        ]\n        '):"","\n        easybase(easybase_url: url, postBody: postBody) { (easybase_data) -> () in\n            print(easybase_data)\n        }\n        "),prism_code:"swift"}]}(n,e);case"TABLE":return e=Object(p.a)({},T),!0===i.authActive&&(e.authentication="YOUR_AUTHENTICATION_KEY"),function(e,t){return[{language_name:"HTML",code_string:function(){var n=Object(p.a)({},t);return delete n.authentication,s.a.createElement(s.a.Fragment,null,s.a.createElement("code",{className:"language-html"},'\n                    <html>\n                    <head>\n                        Paste this into the <head> of your html:\n                        <script src="https://cdn.jsdelivr.net/gh/easybase/easybasejs-visual/dist/bundle.js"><\/script>\n                    </head>\n                    <body>\n                        ...\n                        <table id="easybase_table"></table>\n                        ...\n                    </body>\n                    <script>\n                    '),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-javascript"},"\n                    ".concat(se(n)?"\n                    const customQuery = {\n                        ".concat(re(n," : ",",\n            "),"\n                    }"):"",'\n\n                    // To customize table,\n                    // set fourth parameter to object with options from https://datatables.net/reference/option/. \n                    EasyBase.table("').concat(e,'", "easybase_table"').concat(t.authentication?', "'.concat(t.authentication,'", null'):"").concat(se(n)?t.authentication?", customQuery":", null, null, customQuery":"",");\n                    ")),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("code",{className:"language-html"},"\n                    <\/script>\n                    </html>\n                    "))}(),prism_code:"markup",footer:s.a.createElement(I,{to:"https://github.com/easybase/easybasejs",title:"Read the Documentation"})}]}(n,e)}}),[n,r,k,P,H,T,o,F,i,K]);function le(){var e=document.querySelectorAll("span");return Array.prototype.filter.call(e,(function(e){return RegExp("YOUR_AUTHENTICATION_KEY").test(e.textContent)}))[0]}Object(a.useEffect)((function(){X.a.plugins.NormalizeWhitespace.setDefaults({"remove-trailing":!0,"remove-indent":!0,"left-trim":!0,"right-trim":!0})}),[]),Object(a.useEffect)((function(){X.a.highlightAll();try{(function(){var e=document.querySelectorAll("span");return Array.prototype.filter.call(e,(function(e){return RegExp(ae(n,o.toLowerCase())).test(e.textContent)}))[0]})().classList.add("highlight-red")}catch(e){}try{le().classList.add("highlight-red"),le().classList.add("highlight-italic")}catch(t){}}),[w,r,k,P,H,T,o,F,K]);var ie=function(e){e.target.value>=0&&A(Number(e.target.value))},ue=function(e){e.target.value>=0&&M(Number(e.target.value))},pe=function(e,t){C((function(n){return n[t]=e,Object(p.a)({},n)}))},de=function(e,t){Z((function(n){return n[t]=e,Object(p.a)({},n)}))};return s.a.createElement("div",{style:{backgroundColor:"white",width:1030,maxWidth:1030}},s.a.createElement(y.a,{scrollButtons:"auto",onChange:function(e,t){return _(t)},variant:"scrollable","aria-label":"language example integration helper tabs",value:w,indicatorColor:"primary",textColor:"primary",classes:{root:ee.tabsBorder}},te.map((function(e){return s.a.createElement(g.a,{label:e.language_name,key:"".concat(e.language_name)})}))),te.map((function(e,t){return s.a.createElement(ce,{value:w,index:t,className:ee.refractorRoot,key:"".concat(e.code_string)},s.a.createElement("pre",{className:ee.codeRoot},"string"===typeof e.code_string?s.a.createElement("code",{className:"language-".concat(e.prism_code)},e.code_string):e.code_string),"footer"in e&&s.a.createElement("div",{className:"d-flex align-items-center pt-1",style:{height:30}},e.footer))})),s.a.createElement("div",{className:ee.refractorRoot},s.a.createElement("pre",{className:ee.codeRoot},s.a.createElement("code",null,s.a.createElement("span",{className:"token punctuation"},"Integration ID:")," ",s.a.createElement("span",{className:"token string"},n)))),function(){switch(o){case"GET":return s.a.createElement("div",{className:Object(h.a)("d-flex align-items-start justify-content-space-between",ee.refractorRoot)},s.a.createElement("div",{className:"ml-2 d-flex"},s.a.createElement("div",{className:"d-flex align-items-center"},s.a.createElement(b.a,{variant:"body1",className:"pr-3"},"offset: "),s.a.createElement(f.a,{variant:"outlined",value:P,onChange:ue,type:"number",size:"small",style:{width:75},className:"mr-5"})),s.a.createElement("div",{className:"d-flex align-items-center"},s.a.createElement(b.a,{variant:"body1",className:"pr-3"},"limit: "),s.a.createElement(f.a,{variant:"outlined",value:k,onChange:ie,type:"number",size:"small",style:{width:75},disabled:H}),s.a.createElement(v.a,{control:s.a.createElement(E.a,{color:"primary",checked:H,onChange:function(e){return z(e.target.checked)}}),label:"Return all",className:"ml-1"}))),s.a.createElement(j.a,{elevation:4,className:Object(h.a)("mr-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/Customizing-query-values/"}),s.a.createElement("div",{class:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"Customize Query Values: "),s.a.createElement(b.a,{variant:"body2",className:"mt-1 mb-4",style:{color:"#757575"}},"Overwrite the values in an imported query."),O()(c)?s.a.createElement(b.a,{className:"my-4",style:{color:"#757575"}},"Import a query to customize values."):O()(T)?s.a.createElement(b.a,{className:"my-4",style:{color:"#757575"}},"Add the columns that you want to return from this query under 'GET' in the integration editor drawer."):s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:T,queryValueChangeCallback:pe,largeText:!0,formatAccessorNames:!0}))));case"UPDATE":return s.a.createElement("div",{className:Object(h.a)("d-flex align-items-start justify-content-space-between",ee.refractorRoot)},s.a.createElement(j.a,{elevation:4,className:Object(h.a)("ml-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/EasyBase-data-types/"}),s.a.createElement("div",{class:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"New Values: "),s.a.createElement(b.a,{variant:"body2",className:"mt-1 mb-4",style:{color:"#757575"}},"All matches will be updated with these values."),s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:K,queryValueChangeCallback:de,largeText:!0}))),s.a.createElement(j.a,{elevation:4,className:Object(h.a)("mr-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/Customizing-query-values/"}),s.a.createElement("div",{class:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"Customize Query Values: "),s.a.createElement(b.a,{variant:"body2",className:"mt-1 mb-4",style:{color:"#757575"}},"Overwrite the values in an imported query."),O()(c)?s.a.createElement(b.a,{className:"my-4",style:{color:"#757575"}},"Import a query to customize values via request."):s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:T,queryValueChangeCallback:pe,largeText:!0}))));case"DELETE":return s.a.createElement("div",{className:Object(h.a)("d-flex align-items-start justify-content-space-between",ee.refractorRoot)},s.a.createElement("div",{className:"ml-2 d-flex align-items-center"}),s.a.createElement(j.a,{elevation:4,className:Object(h.a)("mr-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/Customizing-query-values/"}),s.a.createElement("div",{class:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"Customize Query Values: "),s.a.createElement(b.a,{variant:"body2",className:"mt-1 mb-4",style:{color:"#757575"}},"Overwrite the values in an imported query."),O()(c)?s.a.createElement(b.a,{className:"my-4",style:{color:"#757575"}},"Import a query to customize values via request."):s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:T,queryValueChangeCallback:pe,largeText:!0}))));case"POST":return s.a.createElement("div",{className:Object(h.a)("d-flex align-items-start justify-content-space-between",ee.refractorRoot)},s.a.createElement("div",{className:"ml-2 d-flex align-items-center"},s.a.createElement(v.a,{control:s.a.createElement(E.a,{color:"primary",checked:F,onChange:function(e){return G(e.target.checked)}}),label:"Insert record at end of collection",className:"ml-1"})),s.a.createElement(j.a,{elevation:4,className:Object(h.a)("mr-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/EasyBase-data-types/"}),s.a.createElement("div",{class:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"New Values: "),s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:T,queryValueChangeCallback:pe,largeText:!0}))));case"TABLE":return s.a.createElement("div",{className:Object(h.a)("d-flex align-items-start justify-content-space-between",ee.refractorRoot)},s.a.createElement("div",{className:"ml-2 d-flex align-items-center"}),s.a.createElement(j.a,{elevation:4,className:Object(h.a)("mr-4",ee.optionsPaper)},s.a.createElement(x,{className:ee.helpIcon,to:"https://easybase.io/about/2020/09/15/Customizing-query-values/"}),s.a.createElement("div",{className:"px-4 py-2"},s.a.createElement(b.a,{variant:"h6",className:"mt-3"},"Customize Query Values: "),s.a.createElement(b.a,{variant:"body2",className:"mt-1 mb-4",style:{color:"#757575"}},"Overwrite the values in an imported query."),O()(c)?s.a.createElement(b.a,{className:"my-4",style:{color:"#757575"}},"Import a query to customize values via request."):s.a.createElement(J,{accessorToColumnTypeMap:l,typeToValueMap:T,queryValueChangeCallback:pe,largeText:!0}))))}}(),s.a.createElement("div",{style:{height:30}}))};n(258),n(259);var ie=function(){var e=Object(c.a)({palette:{primary:{main:"#556cd6",light:"#8b9aff",dark:"#0c42a4"},secondary:{main:"#ff9e22",light:"#ffcf57",dark:"#c66f00"},error:{main:"#FF0000"},info:{main:"#eceff1"},success:{main:"#00C851"},background:{default:"#fff"},grey:{main:"#757575"}},typography:{}});return s.a.createElement(l.a,{theme:e},s.a.createElement(i.a,null),s.a.createElement(le,{options:{redisID:"YOUR_INTEGRATION_KEY",typeFormats:{time:"Total Minutes",capper:"T/F"},queryObject:{time:1245},accessorToColumnTypeMap:{time:"time",capper:"boolean"},type:"GET",authentication:{authActive:!0,authHash:"asdf"}},onClose:function(){}}))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(s.a.createElement(s.a.StrictMode,null,s.a.createElement(ie,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[162,1,2]]]);
//# sourceMappingURL=main.34e5487b.chunk.js.map